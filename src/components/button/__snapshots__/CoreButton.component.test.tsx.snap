// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button Component disabled button should work correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "borderRadius": 100,
      "margin": 5,
      "opacity": 1,
      "padding": 5,
    }
  }
  testID="BUTTON-BTN"
>
  <Text
    allowFontScaling={false}
    style={
      [
        [
          {
            "fontSize": 16,
            "lineHeight": 26,
            "textAlign": "center",
          },
        ],
        {
          "fontSize": undefined,
        },
      ]
    }
    testID="BUTTON-BTN"
  >
    secondary
  </Text>
</View>
`;

exports[`Button Component render primary button correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "borderRadius": 100,
      "margin": 5,
      "opacity": 1,
      "padding": 5,
    }
  }
  testID="BUTTON-BTN"
>
  <Text
    allowFontScaling={false}
    style={
      [
        [
          {
            "fontSize": 16,
            "lineHeight": 26,
            "textAlign": "center",
          },
        ],
        {
          "fontSize": undefined,
        },
      ]
    }
    testID="BUTTON-BTN"
  >
    primry
  </Text>
</View>
`;

exports[`Button Component render primary button correctly 2`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "borderRadius": 100,
      "margin": 5,
      "opacity": 1,
      "padding": 5,
    }
  }
  testID="BUTTON-BTN"
>
  <Text
    allowFontScaling={false}
    style={
      [
        [
          {
            "fontSize": 16,
            "lineHeight": 26,
            "textAlign": "center",
          },
        ],
        {
          "fontSize": undefined,
        },
      ]
    }
    testID="BUTTON-BTN"
  >
    primary
  </Text>
</View>
`;

exports[`Button Component render secondary button correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "borderRadius": 100,
      "margin": 5,
      "opacity": 1,
      "padding": 5,
    }
  }
  testID="BUTTON-BTN"
>
  <Text
    allowFontScaling={false}
    style={
      [
        [
          {
            "fontSize": 16,
            "lineHeight": 26,
            "textAlign": "center",
          },
        ],
        {
          "fontSize": undefined,
        },
      ]
    }
    testID="BUTTON-BTN"
  >
    secondary
  </Text>
</View>
`;
